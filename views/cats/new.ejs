<% layout('layouts/boilerplate') %>
    <link rel="stylesheet" href="/stylesheets/images.css" class="rel">

    <div class="row">
        <h1 class="text-center">Add a new cat</h1>
        <div class="col-md-3"></div>
        <div class="col-md-6">
            <form action="/cats" method="POST" novalidate class="validated-form" enctype="multipart/form-data">
                <div class="mb-3">
                    <label for="title" class="form-label">Title</label>
                    <input type="text" name="cat[title]" class="form-control" id="title" required>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                </div>
                <div>
                    <label class="form-label">Choose Image(s)</label>
                    <div class="form-file custom-file">
                        <input class="form-control custom-file-input" type="file" id="image" name="image" multiple
                            required>
                        <label for="image" class="form-label custom-file-label"></label>
                    </div>
                    <div id="formFile"></div>
                </div>

                <div class="mb-3">
                    <label for="description" class="form-label">Description</label>
                    <textarea name="cat[description]" class="form-control" id="description" rows="3"
                        required></textarea>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                </div>
                <div class="mb-3">
                    <label for="color" class="form-label">Color</label>
                    <select name="cat[color]" id="color" required>
                        <% for (let color of colors){ %>
                            <option value="<%=color %>">
                                <%=color %>
                            </option>
                            <% } %>
                    </select>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                </div>
                <div class="form-check">
                    <!-- <input type="hidden" name="cat[fluffy]" value="false"> Hidden input -->
                    <input class="form-check-input" type="checkbox" value="true" id="fluffy" name="cat[fluffy]">
                    <label class="form-check-label" for="fluffy">
                        Fluffy?
                    </label>
                </div>
                <div class="mb-3">
                    <label for="friendliness" class="form-label rangeLabel">Friendliness: </label>
                    <input type="range" name="cat[friendliness]" class="form-range" min="0" max="10" id="friendliness">
                </div>
                <div class="mb-3">
                    <label for="location" class="form-label">Location</label>
                    <input type="text" name="cat[location]" class="form-control" id="location" required>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                    <div id="map" style="height: 200px;" class="mt-3"></div>
                </div>
                <button type="submit" class="btn btn-primary mb-3">Add Cat</button>
            </form>
        </div>
    </div>
    <div class="col-md-3"></div>

    <script src="/javascripts/pickLocation.js"></script>
    <script>
        const mapToken = '<%=process.env.MAPBOX_TOKEN%>';
        const cats = { features: <%- JSON.stringify(cats) %>};
    </script>

    <script>
        const rangeInput = document.getElementById('friendliness');
        const friendliness = document.querySelector('.rangeLabel');
        rangeInput.addEventListener('input', function () {
            friendliness.textContent = 'Friendliness: ' + rangeInput.value;
        });
    </script>

    <script>
        (function () {
            'use strict'
            bsCustomFileInput.init()

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.validated-form')

            // Loop over them and prevent submission
            Array.from(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
    <script>
        document.getElementById("image").addEventListener("change", previewMultiple);

        function previewMultiple(event) {
            const images = event.target.files;
            const formFileElement = document.getElementById("formFile");

            // Clear the existing content of formFileElement
            formFileElement.innerHTML = '';

            for (let i = 0; i < images.length; i++) {
                const file = images[i];
                const urls = URL.createObjectURL(file);

                // Create a new div to hold the image and file name
                const imageDiv = document.createElement('div');
                imageDiv.classList.add('image-preview');
                imageDiv.innerHTML = `
                <img src="${urls}">
                <p>${file.name.substring(0, 3)}(...)${file.name.substring(file.name.length - 4, file.name.length)}</p>`;

                formFileElement.appendChild(imageDiv);
            }
        }
    </script>